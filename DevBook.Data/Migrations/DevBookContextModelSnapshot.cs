// <auto-generated />
using System;
using DevBook.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DevBook.Data.Migrations
{
    [DbContext(typeof(DevBookContext))]
    partial class DevBookContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DevBook.Data.Models.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte>("ContactType");

                    b.Property<Guid>("UserId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("DevBook.Data.Models.Objective", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("Objectives");
                });

            modelBuilder.Entity("DevBook.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Login");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DevBook.Data.Models.UserObjective", b =>
                {
                    b.Property<Guid>("ObjectiveId");

                    b.Property<Guid>("UserId");

                    b.Property<Guid>("Id");

                    b.HasKey("ObjectiveId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserObjective");
                });

            modelBuilder.Entity("DevBook.Data.Models.Contact", b =>
                {
                    b.HasOne("DevBook.Data.Models.User", "User")
                        .WithMany("Contacts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DevBook.Data.Models.UserObjective", b =>
                {
                    b.HasOne("DevBook.Data.Models.Objective", "Objective")
                        .WithMany("UserObjectives")
                        .HasForeignKey("ObjectiveId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DevBook.Data.Models.User", "User")
                        .WithMany("UserObjectives")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
